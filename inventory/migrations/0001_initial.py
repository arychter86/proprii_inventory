# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-09-11 11:46
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import inventory.validators
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('street', models.CharField(blank=True, max_length=100)),
                ('code', models.CharField(blank=True, max_length=10, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:\\-\\d+)*\\Z', 32), code='invalid', message='Numeric characters separated by - allowed.')])),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('client_name', models.CharField(blank=True, max_length=200)),
                ('notes', models.TextField(blank=True, max_length=1000)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='InventoryMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('picture', models.ImageField(default='no-map.jpg', upload_to='photos/maps/')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('inventory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maps', to='inventory.Inventory')),
            ],
        ),
        migrations.CreateModel(
            name='Tree',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tree_number', models.IntegerField(default=0, validators=[inventory.validators.validate_tree_number])),
                ('name', models.CharField(max_length=200)),
                ('latin_name', models.CharField(blank=True, max_length=200)),
                ('height_m', models.IntegerField(blank=True, null=True, validators=[inventory.validators.validate_postive_int])),
                ('crown_area', models.IntegerField(blank=True, null=True, validators=[inventory.validators.validate_postive_int])),
                ('crown_area_unit', models.CharField(choices=[('m', 'm'), ('m2', 'm2')], default='1', max_length=2)),
                ('notes', models.TextField(blank=True, max_length=1000)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('inventory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trees', to='inventory.Inventory')),
            ],
        ),
        migrations.CreateModel(
            name='TreeImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('picture', models.ImageField(default='no-img.jpg', upload_to='photos/trees/')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('tree', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='images', to='inventory.Tree')),
            ],
        ),
        migrations.CreateModel(
            name='TreeOnMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tree_number', models.IntegerField(default=0, validators=[inventory.validators.validate_postive_int])),
                ('x_pos', models.IntegerField(default=0, validators=[inventory.validators.validate_postive_int])),
                ('y_pos', models.IntegerField(default=0, validators=[inventory.validators.validate_postive_int])),
                ('radius', models.IntegerField(default=10, validators=[inventory.validators.validate_postive_int])),
                ('inventorymap', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='treesonmap', to='inventory.InventoryMap')),
                ('tree', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.Tree')),
            ],
        ),
        migrations.CreateModel(
            name='TreeTrunk',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trunk_cm', models.IntegerField(validators=[inventory.validators.validate_trunk])),
                ('meas_height_cm', models.IntegerField(default='130', validators=[inventory.validators.validate_postive_int])),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('tree', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trunks', to='inventory.Tree')),
            ],
        ),
    ]
